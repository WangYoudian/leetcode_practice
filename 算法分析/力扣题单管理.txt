题单管理的目的：
为了更有规划、更高效的刷题，避免长时间没有输入导致手法过于生疏，又或者更长时间没有强化训练导致做过的题需要重新再来（其中包括了必刷题和一些没什么帮助的题目）。
以上是问题的主要来源，同“每**亲自做**一遍题目都将有所收获”的愿景结合，便产生了如下想法：
1.平时逛各种网站、公众号时感兴趣的题目，在力扣按图索骥，进行分类；
2.大片闲暇时间（≥8小时，可以拆开，但必须保持思考不中断）提交的题目，进行归档；
3.各种类型（tag）题中比较有标志的，可以引出模板的（不用刻意总结模板，直接把这类题目扔到redo或者tri-do里即可，在提交里写笔记、coding注意事项）
4.高级或者有代表性的数据结构

题单各自的定位：
Favorite：收集日常浏览到的题目，以及力扣每日一题
API Design：实际软件开发中知名的数据结构或者功能设计
Favorite Data Structure：高级或者有代表性的数据结构，这类题目不宜多，先放着，抛砖引玉，找大片的时间看相关题解，总结的博客，全方位理解之后，重点突破
Redo Suggestion：二刷题目，标※的题目（想法很有意思，但没引入ADS），普通coding技巧题（边界、指针），模板题
Tri-do Suggestion：三刷题目，高级数据结构特定场景题，从模板衍生的特定的模板，知名但难度hard的算法（或者用的很广的知名算法），数学题

总的来说，Redo应该是做的最多的也应该是最熟练的部分，Tri-do相对而言有点束之高阁的意思。但只要做过的难题都争取吃透，除非题目本身场景又很偏又纯业务跟算法没半毛钱关系。

新增题单：贪心策略
贪心策略主要收集部分脑筋急转弯或者采用贪心策略能够比较妙（快）的解决的问题。
